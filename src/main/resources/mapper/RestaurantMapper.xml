<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eathub.mapper.RestaurantMapper">

<!-- INSERT-->
    <!-- 레스토랑 추가 -->
    <insert id="insertRestaurant" parameterType="restaurantInfo">
        INSERT INTO restaurant_info( member_seq
                                    , category_seq
                                    , restaurant_name
                                    , tag
                                    , location
                                    , description
                                    , phone
                                    , zipcode
                                    , address1
                                    , address2
                                    , openHour
                                    , closeHour
                                    , closedDay)
        VALUES ( #{member_seq}
                , #{category_seq}
                , #{restaurant_name}
                , #{tag}
                , #{location}
                , #{description}
                , #{phone}
                , #{zipcode}
                , #{address1}
                , #{address2}
                , #{openHour}
                , #{closeHour}
                , #{closedDay})

    </insert>
    <!-- 예약 추가 -->
    <insert id="insertReservation" parameterType="Reservation">
        INSERT INTO reservation(restaurant_seq
        , member_seq
        , res_date
        , res_people
        , res_comment)
        VALUES ( #{restaurant_seq}
        , #{member_seq}
        , #{res_date}
        , #{res_people}
        , #{res_comment})

    </insert>

    <!-- 레스토랑 등록대기열 추가   -->
    <insert id="insertRestaurantStatus" parameterType="restaurantInfo">
        INSERT INTO restaurant_status(restaurant_seq)
        VALUES (#{restaurant_seq})
    </insert>

    <!-- 찜목록 추가-->
    <insert id="insertZzimRestaurant">
        INSERT INTO restaurant_zzim (member_seq, restaurant_seq)
        VALUES (#{member_seq}, #{restaurant_seq})
    </insert>

<!-- 해당 식당메뉴들 추가-->
    <insert id="insertRestaurantMenu" parameterType="map">
        INSERT INTO Menu (restaurant_seq, menu_name, menu_info, menu_image, menu_image_path, menu_price, menu_type)
        VALUES
        <foreach collection="menuFormDTOList" item="menu" separator=",">
            (#{restaurant_seq}, #{menu.menu_name}, #{menu.menu_info}, #{menu.menu_image_name}, #{menu.menu_image_path}, #{menu.menu_price}, #{menu.menu_type})
        </foreach>
    </insert>

    <!-- 식당 상세정보 등록  -->
    <insert id="insertRestaurantDetail" parameterType="com.eathub.dto.RestaurantDetailDTO">
        INSERT INTO restaurant_detail(restaurant_seq, image_url, description_detail, openhour_detail, precaution, amenities, parking, valet, drink, kidszone, room)
        VALUES (#{restaurant_seq}, #{image_url}, #{description_detail}, #{openhour_detail}, #{precaution}, #{amenities}, #{parking}, #{valet}, #{drink}, #{kidszone}, #{room})
    </insert>

    <!-- 식당 대표이미지 등록 -->
    <insert id="insertRestaurantImage">
        INSERT INTO restaurant_image(restaurant_seq, image_url)
        VALUES (#{restaurantSeq}, #{uuid})
    </insert>

<!-- SELECT-->

    <select id="selectRestaurantInfo" resultType="restaurantInfo">
        SELECT *
        FROM restaurant_info
        WHERE restaurant_seq = #{restaurant_seq}
    </select>

    <select id="selectRestaurantInfoWithType" resultType="com.eathub.dto.OwnerRestaurantDetailDTO">
        SELECT r.*, c.restaurant_type
        FROM restaurant_info r
        LEFT JOIN category c ON r.category_seq = c.category_seq
        WHERE r.restaurant_seq = #{restaurant_seq}
    </select>

    <select id="selectRestaurantInfoList" resultType="restaurantInfo">
        SELECT * FROM restaurant_info
    </select>

<!-- 위에거랑 똑같은데 찜 여부를 포함할수있는 새로운 DTO-->
    <select id="selectRestaurantSearchList" resultType="com.eathub.dto.SearchResultDTO">
            SELECT restaurant_seq,member_seq,category_seq,restaurant_name,tag,location,description,openHour,closeHour,rating,review_total,zzim_total
            FROM restaurant_info
            WHERE  status = 'ACCESS'
    </select>

    <select id="selectZzimList" parameterType="Long" resultType="restaurantZzim">
        SELECT *
        FROM restaurant_zzim
        WHERE member_seq = #{member_seq}
    </select>

    <select id="selectMyPageDTO" resultType="myPageDTO">
        SELECT *
        FROM restaurant_zzim z
                LEFT JOIN restaurant_info Using (restaurant_seq)
        WHERE z.restaurant_seq = #{restaurant_seq}
            AND z.member_seq = #{member_seq}
    </select>
    <!-- 현재 식당을 찜했는지 여부 확인 -->
    <select id="checkZzimData" resultType="int">
        SELECT COUNT(*) FROM restaurant_zzim
        WHERE member_seq = #{member_seq} AND restaurant_seq = #{restaurant_seq}
    </select>

    <!-- 카테고리 목록 불러오기   -->
    <select id="selectCategoryList" resultType="categoryDTO">
        SELECT *
        FROM category
    </select>

    <!-- 방금 등록한 가게 불러오기   -->
    <select id="selectRestaurant" parameterType="restaurantJoinDTO" resultType="restaurantInfo">
        SELECT *
        FROM restaurant_info
        WHERE zipcode=#{zipcode} and address1=#{address1} and address2=#{address2}
    </select>


    <!-- 점주의 레스토랑 리스트 불러오기   -->
    <select id="selectOwnerRestaurantList" resultType="mypageDTO">
        SELECT *
        FROM restaurant_info
        WHERE member_seq=#{member_seq}
    </select>

    <!-- 레스토랑 타입(카테고리) 불러오기   -->
    <select id="getRestaurantType" resultType="String">
        SELECT restaurant_type
        FROM category
        WHERE category_seq = #{categorySeq}
    </select>

    <!-- category_seq별 레스토랑 리스트 불러오기 -->
    <select id="selectSearchCategotyResultList" resultType="com.eathub.dto.SearchResultDTO">
        SELECT restaurant_seq,member_seq,category_seq,restaurant_name,tag,location,description,openHour,closeHour,rating,review_total,zzim_total
        FROM restaurant_info
        WHERE  category_seq= #{category_seq} and status = 'ACCESS'
        LIMIT 20
    </select>


    <!-- 예약 top -->
    <select id="selectRestaurantTopSearchList" resultType="com.eathub.dto.SearchResultDTO">
        SELECT restaurant_seq,member_seq,category_seq,restaurant_name,tag,location,description,openHour,closeHour,rating,review_total,zzim_total
        FROM restaurant_info
        WHERE status = 'ACCESS'
        order by review_total desc
    </select>

    <!-- 예약 핫플 best -->
    <select id="selectRestaurantBestSearchList" resultType="com.eathub.dto.SearchResultDTO">
        SELECT restaurant_seq,member_seq,category_seq,restaurant_name,tag,location,description,openHour,closeHour,rating,review_total,zzim_total
        FROM restaurant_info
        WHERE status = 'ACCESS'
        order by review_total desc
        LIMIT 20
    </select>

    <!-- 이달의 맛집 -->
    <select id="selectRestaurantMonthlySearchList" resultType="com.eathub.dto.SearchResultDTO">
        SELECT restaurant_seq,member_seq,category_seq,restaurant_name,tag,location,description,openHour,closeHour,rating,review_total,zzim_total
        FROM restaurant_info
        WHERE status = 'ACCESS'
        order by zzim_total desc;
    </select>

    <!-- 어디로 가시나요? -->
    <select id="selectSearchAddressResultList" resultType="com.eathub.dto.SearchResultDTO">
        SELECT restaurant_seq,member_seq,category_seq,restaurant_name,tag,lower(location),description,openHour,closeHour,rating,review_total,zzim_total,address1
        FROM restaurant_info
        WHERE
        <foreach item="item" index="index" collection="list" open="(" separator="OR" close=")">
            address1 LIKE #{item}
        </foreach>
        and
        <foreach item="item" index="index" collection="list" open="(" separator="OR" close=")">
            tag LIKE #{item}
        </foreach>
        and status = 'ACCESS'
    </select>

    <!-- 오늘의 예약 -->
    <select id="selectRestaurantTodaySearchList" resultType="com.eathub.dto.SearchResultDTO">
        SELECT restaurant_seq, member_seq, category_seq, restaurant_name, tag, location, description, openHour, closeHour, rating, review_total, zzim_total
        FROM restaurant_info
        WHERE status = 'ACCESS'
        ORDER BY rand(TO_DAYS(NOW()));
    </select>


    <!-- 랜덤으로 레스토랑 뽑아오기   -->
    <select id="selectRandomRestaurant" resultType="com.eathub.dto.SearchResultDTO">
        SELECT restaurant_seq,member_seq,category_seq,restaurant_name,tag,location,description,openHour,closeHour,rating,review_total,zzim_total
        FROM restaurant_info
        WHERE  status = 'ACCESS'
        ORDER BY RAND()
    </select>


    <!-- 레스토랑 상세정보 불러오기   -->
    <select id="selectRestaurantDetail" resultType="com.eathub.dto.RestaurantDetailDTO">
        SELECT *
        FROM restaurant_detail
        WHERE restaurant_seq = #{restaurantSeq}
    </select>

<!--예약번호로 레스토랑 번호찾기 -->
<select id="selectRestaurantSeqByResSeq" >
    SELECT restaurant_seq
    FROM reservation
    WHERE res_seq = #{res_seq}
</select>
<select id="selectAllPictures" resultType="com.eathub.dto.PictureDTO">
    select *
    from review_pictures
            LEFT JOIN reservation USING (res_seq)
    WHERE restaurant_seq=#{restaurant_seq};
</select>

    <!--레스토랑 SEQ로 레스토랑 정보 받기 -->
    <select id="selectRestaurantByRestaurantSeq" resultType="com.eathub.dto.RestaurantEditDTO">
        SELECT *
        FROM restaurant_info
        WHERE restaurant_seq = #{restaurantSeq}
    </select>


    <!--메뉴 받아오기-->
    <select id="getMenuListByRestaurantSeq" parameterType="Long" resultType="com.eathub.dto.MenuFormDTO">
        SELECT *
        FROM MENU
        WHERE restaurant_seq = #{restaurant_seq}

    <!-- 모든 레스토랑 Detail DTO 받아오기   -->
    <select id="selectAllRestaurantDetailDTO" resultType="com.eathub.dto.RestaurantDetailDTO">
        SELECT *
        FROM restaurant_detail
    </select>

<!-- UPDATE-->


    <!-- 마이페이지 찜목록 comment 업데이트-->
    <update id="updateZzimComment">
        UPDATE restaurant_zzim
        SET comment = #{comment}
        WHERE zzim_seq = #{zzim_seq}
    </update>

    <update id="updateZzimTotal">
        update restaurant_info set zzim_total = zzim_total + #{count} where restaurant_seq = #{restaurant_seq}
    </update>

    <!-- restaurant_status 테이블의 status 업데이트 -->
    <update id="updateRestaurantStatus">
        UPDATE restaurant_status
        SET status = #{status} , comment = #{comment} , admin_seq = #{admin_seq}, updatedAt = now()
        WHERE restaurant_seq = #{restaurant_seq}
    </update>

    <!-- restaurant_info 테이블의 status 업데이트 -->
    <update id="updateRestaurantInfoStatus">
        UPDATE restaurant_info
        SET status = #{status}, approvedAt = now()
        WHERE restaurant_seq = #{restaurant_seq}
    </update>

    <!-- 가게 정보 수정 -->
    <update id="updateRestaurantInfo" parameterType="com.eathub.dto.RestaurantEditDTO">
        UPDATE restaurant_info
        SET category_seq = #{category_seq},
            restaurant_name = #{restaurant_name},
            tag = #{tag},
            location = #{location},
            description = #{description},
            phone = #{phone},
            zipcode = #{zipcode},
            address1 = #{address1},
            address2 = #{address2},
            openHour = #{openHour},
            closeHour = #{closeHour},
            closedDay = #{closedDay}
        WHERE restaurant_seq = #{restaurant_seq}
    </update>

    <!-- 레스토랑 Detail Update   -->
    <update id="updateRestaurantDetail" parameterType="com.eathub.dto.RestaurantDetailDTO">
        UPDATE restaurant_detail
        SET image_url = #{image_url},
            description_detail = #{description_detail},
            openhour_detail = #{openhour_detail},
            precaution = #{precaution},
            amenities = #{amenities},
            parking = #{parking},
            valet = #{valet},
            drink = #{drink},
            kidszone = #{kidszone},
            room = #{room}
        WHERE restaurant_seq = #{restaurant_seq}
    </update>

    <update id="updateRestaurantImage" >
        UPDATE restaurant_image
        SET image_url = #{uuid}
        WHERE restaurant_seq = #{restaurantSeq}
    </update>

    <!-- 이미지 업로드 안할때 -->
    <update id="updateRestaurantDetailExceptImg" parameterType="com.eathub.dto.RestaurantDetailDTO">
        UPDATE restaurant_detail
        SET description_detail = #{description_detail},
            openhour_detail = #{openhour_detail},
            precaution = #{precaution},
            amenities = #{amenities},
            parking = #{parking},
            valet = #{valet},
            drink = #{drink},
            kidszone = #{kidszone},
            room = #{room}
        WHERE restaurant_seq = #{restaurant_seq}
    </update>


<!-- DELETE-->

    <!-- 찜목록 삭제-->
    <delete id="deleteZzimRestaurant">
        DELETE FROM restaurant_zzim
        WHERE member_seq = #{member_seq} AND restaurant_seq = #{restaurant_seq}
    </delete>

</mapper>
